# telegram_bot.py

import openai
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
from db_module import init_db, save_client, save_message
from gpt_module import ask_gpt
from config import TELEGRAM_TOKEN

# –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ ‚Äî —Å–æ–∑–¥–∞—ë–º –±–∞–∑—É
init_db()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user_input = update.message.text

    print(f"[{chat_id}] {user_input}")  # –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ –±–∞–∑—É (–µ—Å–ª–∏ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω)
    save_client(chat_id=chat_id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    save_message(chat_id, "user", user_input)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
    import sqlite3
    conn = sqlite3.connect("kaiftourkz.db")
    cursor = conn.cursor()
    cursor.execute("""
        SELECT role, content FROM messages
        WHERE chat_id = ?
        ORDER BY timestamp ASC
    """, (chat_id,))
    rows = cursor.fetchall()
    conn.close()

    history = [{"role": "system", "content": "–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ç—É—Ä–∞–º. –û—Ç–≤–µ—á–∞–π –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, —É—Ç–æ—á–Ω—è–π –¥–µ—Ç–∞–ª–∏: —Å—Ç—Ä–∞–Ω–∞, –¥–∞—Ç—ã, –±—é–¥–∂–µ—Ç, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫. –ù–µ –∑–ª–∏—Å—å, –Ω–µ —Ç–æ—Ä–æ–ø–∏—Å—å."}]
    for role, content in rows:
        history.append({"role": role, "content": content})

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º GPT
    gpt_reply = ask_gpt(history)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    save_message(chat_id, "assistant", gpt_reply)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(gpt_reply)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()
